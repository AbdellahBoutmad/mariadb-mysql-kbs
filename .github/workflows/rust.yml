name: Build and test rust code

on:
    pull_request:
    push:

permissions:
    contents: read

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
    build_and_test:
        runs-on: ubuntu-latest
        name: Build and test
        steps:
            - name: Cache cargo registry
              uses: actions/cache@v3
              with:
                  path: ~/.cargo/registry
                  key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
            - name: Cache cargo index
              uses: actions/cache@v3
              with:
                  path: ~/.cargo/git
                  key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
            - name: Cache cargo build
              uses: actions/cache@v3
              with:
                  path: target
                  key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Set up toolchain
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: 1.64.0
                  override: true
            - name: Build
              uses: actions-rs/cargo@v1
              with:
                  command: build
                  args: --release
              env:
                CARGO_INCREMENTAL: '0'
                RUSTFLAGS: '-Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cinstrument-coverage'
                RUSTDOCFLAGS: '-Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cinstrument-coverage'
            - name: Test
              uses: actions-rs/cargo@v1
              with:
                  command: test
                  args: --all-features --no-fail-fast
              env:
                CARGO_INCREMENTAL: '0'
                RUSTFLAGS: '-Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cinstrument-coverage'
                RUSTDOCFLAGS: '-Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cinstrument-coverage'
            - name: debug
              run: ls -lahR
            - name: grcov
              id: coverage
              uses: actions-rs/grcov@v0.1
            - uses: codecov/codecov-action@v3
              with:
                files: ${{ steps.coverage.outputs.report }}
                flags: rust
                fail_ci_if_error: true # optional (default = false)
                verbose: true # optional (default = false)
